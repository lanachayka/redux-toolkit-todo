{"version":3,"sources":["components/InputField.js","store/todoSlice.js","components/TodoItem.js","components/TodoList.js","App.js","store/index.js","index.js"],"names":["InputField","text","handleSubmit","handleInput","value","onChange","e","target","onClick","fetchTodos","createAsyncThunk","_","a","rejectWithValue","fetch","response","ok","Error","json","data","message","deleteTodo","id","dispatch","method","removeTodo","toogleStatus","getState","todo","todos","find","headers","body","JSON","stringify","completed","toogleTodoComplete","addNewTodo","title","userId","addTodo","setError","state","action","status","error","payload","todoSlice","createSlice","name","initialState","reducers","push","filter","toogledTodo","extraReducers","pending","fulfilled","rejected","actions","TodoItem","useDispatch","type","checked","className","TodoList","useSelector","map","App","useState","setText","useEffect","trim","length","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5d55e1c1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function InputField({text, handleSubmit, handleInput}) {\r\n    return (\r\n        <label>\r\n            <input value={text} onChange={(e) => handleInput(e.target.value)} />\r\n            <button onClick={handleSubmit}>Add Todo</button>\r\n        </label>\r\n    )\r\n}\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchTodos = createAsyncThunk(\r\n    'todos/fetchTodos', \r\n    async function (_, {rejectWithValue}) {\r\n        try {\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos?_limit=10');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Server Error!');\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        }\r\n        catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const deleteTodo = createAsyncThunk(\r\n    'todos/deleteTodo',\r\n    async function (id, { rejectWithValue, dispatch }) {\r\n        try {\r\n            const response = await fetch(\r\n                `https://jsonplaceholder.typicode.com/todos/${id}`,\r\n                { method : 'DELETE' }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can`t delete task. Server Error.');\r\n            }\r\n\r\n            dispatch(removeTodo({ id: id }));\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    \r\n    }\r\n);\r\n\r\nexport const toogleStatus = createAsyncThunk(\r\n    'todos/toogleStatus',\r\n    async function (id, { rejectWithValue, dispatch, getState }) {\r\n\r\n        const todo = getState().todos.todos.find(todo => todo.id === id);\r\n\r\n        try {\r\n            const response = await fetch(\r\n                `https://jsonplaceholder.typicode.com/todos/${id}`,\r\n                {\r\n                    method: 'PATCH',\r\n                    headers: {\r\n                        'Content-type': 'application/json; charset=UTF-8',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        completed: !todo.completed,\r\n                    })\r\n                }\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can`t toogle status. Server Error.');\r\n            };\r\n\r\n            dispatch(toogleTodoComplete({ id: id }));\r\n\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const addNewTodo = createAsyncThunk(\r\n    'todos/addNewTodo',\r\n    async function (title, { rejectWithValue, dispatch }) {\r\n        try {\r\n            const todo = {\r\n                userId: 1,\r\n                title: title,\r\n                completed: false\r\n            }\r\n\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos', {\r\n                method: 'POST',\r\n                body: JSON.stringify(todo),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Can`t add task. Server Error.');\r\n            };\r\n\r\n            const data = await response.json();\r\n\r\n            dispatch(addTodo(data));\r\n            \r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    }\r\n)\r\n\r\nconst setError = (state, action) => {\r\n    state.status = 'rejected';\r\n    state.error = action.payload;\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todoSlice',\r\n    initialState: {\r\n        todos: [],\r\n        status: null,\r\n        error: null\r\n    },\r\n    reducers: {\r\n        addTodo(state, action) { \r\n            state.todos.push(action.payload);\r\n        },\r\n        removeTodo(state, action) {\r\n            state.todos = state.todos.filter(todo => todo.id !== action.payload.id);\r\n        },\r\n        toogleTodoComplete(state, action) {\r\n            const toogledTodo = state.todos.find(todo => todo.id === action.payload.id);\r\n            toogledTodo.completed = !toogledTodo.completed;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchTodos.pending]: (state) => {\r\n            state.status = 'Loading';\r\n            state.error = null\r\n        },\r\n        [fetchTodos.fulfilled]: (state, action) => { \r\n            state.status = 'resolved';\r\n            state.todos = action.payload;\r\n        },\r\n        [fetchTodos.rejected]: setError,\r\n        [deleteTodo.rejected]: setError,\r\n        [toogleStatus.rejected]: setError,\r\n        [addNewTodo.rejected]: setError,\r\n    }\r\n});\r\n\r\nconst { addTodo, removeTodo, toogleTodoComplete } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { deleteTodo, toogleStatus } from '../store/todoSlice';\r\n\r\nexport default function TodoItem({ id, completed, title }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <li>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={() => dispatch(toogleStatus(id))}>\r\n            </input>\r\n            <span>{title}</span>\r\n            <span className='delete' onClick={() => dispatch(deleteTodo(id))}>&times;</span>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport TodoItem from './TodoItem'\r\n\r\nexport default function TodoList() {\r\n    const todos = useSelector(state => state.todos.todos);\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => <TodoItem\r\n                key={todo.id}\r\n                {...todo}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport InputField from './components/InputField';\nimport TodoList from './components/TodoList';\nimport { addNewTodo, fetchTodos } from './store/todoSlice'\n\nfunction App() {\n  const [text, setText] = useState('');\n  const { status, error } = useSelector(state => state.todos);\n  const dispatch = useDispatch();\n\n  const addTask = () => {\n    if (text.trim().length) {\n      dispatch(addNewTodo(text));\n      setText('');\n    }\n  };\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  },[dispatch]);\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <InputField handleSubmit={addTask} handleInput={setText} text={text} />\n\n      {status === 'Loading' && <h2>Loading...</h2>}\n      {error && <h2>An error occured {error}</h2>}\n\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}