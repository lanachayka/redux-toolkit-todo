{"version":3,"sources":["components/InputField.js","store/todoSlice.js","components/TodoItem.js","components/TodoList.js","App.js","store/index.js","index.js"],"names":["InputField","text","handleSubmit","handleInput","value","onChange","e","target","onClick","todoSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","push","id","Date","toISOString","payload","completed","removeTodo","filter","todo","toogleTodoComplete","toogledTodo","find","actions","TodoItem","dispatch","useDispatch","type","checked","className","TodoList","useSelector","map","App","useState","setText","trim","length","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"+OAEe,SAASA,EAAT,GAAwD,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,YACpD,OACI,kCACI,uBAAOC,MAAOH,EAAMI,SAAU,SAACC,GAAD,OAAOH,EAAYG,EAAEC,OAAOH,UAC1D,wBAAQI,QAASN,EAAjB,yB,kBCJNO,EAAYC,YAAY,CAC1BC,KAAM,YACNC,aAAc,CACVC,MAAO,IAEXC,SAAU,CACNC,QADM,SACEC,EAAOC,GACXD,EAAMH,MAAMK,KAAK,CACbC,IAAI,IAAIC,MAAOC,cACfpB,KAAMgB,EAAOK,QAAQrB,KACrBsB,WAAW,KAGnBC,WARM,SAQKR,EAAOC,GACdD,EAAMH,MAAQG,EAAMH,MAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOF,EAAOK,QAAQH,OAExEQ,mBAXM,SAWaX,EAAOC,GACtB,IAAMW,EAAcZ,EAAMH,MAAMgB,MAAK,SAAAH,GAAI,OAAIA,EAAKP,KAAOF,EAAOK,QAAQH,MACxES,EAAYL,WAAaK,EAAYL,c,EAKUd,EAAUqB,QAAtDf,E,EAAAA,QAASS,E,EAAAA,WAAYG,E,EAAAA,mBAErBlB,IAAf,QCvBe,SAASsB,EAAT,GAA4C,IAAxBZ,EAAuB,EAAvBA,GAAII,EAAmB,EAAnBA,UAAWtB,EAAQ,EAARA,KACxC+B,EAAWC,cACjB,OACI,+BACI,uBACIC,KAAK,WACLC,QAASZ,EACTlB,SAAU,kBAAM2B,EAASL,EAAmB,CAAER,GAAIA,QAEtD,+BAAOlB,IACP,sBAAMmC,UAAU,SAAS5B,QAAS,kBAAMwB,EAASR,EAAW,CAAEL,GAAIA,MAAlE,qBCVG,SAASkB,IACpB,IAAMxB,EAAQyB,aAAY,SAAAtB,GAAK,OAAIA,EAAMH,MAAMA,SAC/C,OACI,6BACKA,EAAM0B,KAAI,SAAAb,GAAI,OAAI,cAACK,EAAD,eAEXL,GADCA,EAAKP,SCkBXqB,MApBf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNxC,EADM,KACAyC,EADA,KAEPV,EAAWC,cASjB,OACE,sBAAKG,UAAU,MAAf,UACE,2CACA,cAACpC,EAAD,CAAYE,aAVA,WACVD,EAAK0C,OAAOC,SACdZ,EAASjB,EAAQ,CAAEd,KAAMA,KACzByC,EAAQ,MAO2BvC,YAAauC,EAASzC,KAAMA,IAC/D,cAACoC,EAAD,QCnBSQ,cAAe,CAC1BC,QAAS,CACLjC,MAAOkC,KCEfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGNC,SAASC,eAAe,W","file":"static/js/main.a4b9cb7f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function InputField({text, handleSubmit, handleInput}) {\r\n    return (\r\n        <label>\r\n            <input value={text} onChange={(e) => handleInput(e.target.value)} />\r\n            <button onClick={handleSubmit}>Add Todo</button>\r\n        </label>\r\n    )\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todoSlice',\r\n    initialState: {\r\n        todos: []\r\n    },\r\n    reducers: {\r\n        addTodo(state, action) { \r\n            state.todos.push({\r\n                id: new Date().toISOString(),\r\n                text: action.payload.text,\r\n                completed: false\r\n            })\r\n        },\r\n        removeTodo(state, action) {\r\n            state.todos = state.todos.filter(todo => todo.id !== action.payload.id);\r\n        },\r\n        toogleTodoComplete(state, action) {\r\n            const toogledTodo = state.todos.find(todo => todo.id === action.payload.id);\r\n            toogledTodo.completed = !toogledTodo.completed;\r\n        },\r\n    }\r\n});\r\n\r\nexport const { addTodo, removeTodo, toogleTodoComplete } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeTodo, toogleTodoComplete } from '../store/todoSlice';\r\n\r\nexport default function TodoItem({ id, completed, text }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <li>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={() => dispatch(toogleTodoComplete({ id: id }))}>\r\n            </input>\r\n            <span>{text}</span>\r\n            <span className='delete' onClick={() => dispatch(removeTodo({ id: id }))}>&times;</span>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport TodoItem from './TodoItem'\r\n\r\nexport default function TodoList() {\r\n    const todos = useSelector(state => state.todos.todos);\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => <TodoItem\r\n                key={todo.id}\r\n                {...todo}\r\n                />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './App.css';\nimport InputField from './components/InputField';\nimport TodoList from './components/TodoList';\nimport { addTodo } from './store/todoSlice'\n\nfunction App() {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const addTask = () => {\n    if (text.trim().length) {\n      dispatch(addTodo({ text: text }));\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <InputField handleSubmit={addTask} handleInput={setText} text={text}/>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store/index'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider >\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}